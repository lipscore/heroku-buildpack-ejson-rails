#!/usr/bin/env bash
set -euo pipefail

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

step() { echo "-----> [EJSON] $*"; }
fail() { echo " !!    [EJSON] ERROR: $*" >&2; exit 1; }

step "Compile phase started"
step "BUILD_DIR: $BUILD_DIR"
step "CACHE_DIR: $CACHE_DIR"
step "ENV_DIR:   $ENV_DIR"

# Ensure config/secrets exists
if [ ! -d "$BUILD_DIR/config/secrets" ]; then
  fail "config/secrets/ not present in BUILD_DIR"
fi

# Detect .ejson file
EJSON_ENV=${EJSON_ENVIRONMENT:-$RAILS_ENV}
EJSON_FILE="$BUILD_DIR/config/secrets/${EJSON_ENV}.ejson"
JSON_FILE="$BUILD_DIR/config/secrets/${EJSON_ENV}.json"

if [ ! -f "$EJSON_FILE" ]; then
  fail "Missing EJSON file: $EJSON_FILE"
fi

step "Found EJSON file: $EJSON_FILE"

# Install EJSON binary
EJSON_VERSION=${EJSON_VERSION:-1.5.3}
step "Installing EJSON v$EJSON_VERSION"

mkdir -p "$BUILD_DIR/bin"
cd /tmp

curl -s -L -o ejson.tar.gz \
  "https://github.com/Shopify/ejson/releases/download/v${EJSON_VERSION}/ejson_${EJSON_VERSION}_linux_amd64.tar.gz"
tar -xzf ejson.tar.gz
if [ ! -f "ejson" ]; then
  fail "EJSON binary missing from tarball"
fi
mv ejson "$BUILD_DIR/bin/"
chmod +x "$BUILD_DIR/bin/ejson"
step "Installed ejson binary into slug bin/"

# Ensure EJSON_PRIVATE_KEY is set in environment at compile time
if [ -z "${EJSON_PRIVATE_KEY:-}" ]; then
  fail "EJSON_PRIVATE_KEY is not set at compile time"
fi

# Create key for decryption
mkdir -p /opt/ejson/keys
PUBLIC_KEY=$(jq -r '._public_key' "$EJSON_FILE")
if [ -z "$PUBLIC_KEY" ] || [ "$PUBLIC_KEY" == "null" ]; then
  fail "Could not extract _public_key from $EJSON_FILE"
fi
echo "$EJSON_PRIVATE_KEY" > "/opt/ejson/keys/$PUBLIC_KEY"
step "Installed private key for public key $PUBLIC_KEY"

# Decrypt .ejson into .json
if ! "$BUILD_DIR/bin/ejson" decrypt "$EJSON_FILE" > "$JSON_FILE"; then
  fail "Decryption failed for $EJSON_FILE"
fi

step "Successfully decrypted $EJSON_FILE -> $JSON_FILE"
step "Compile phase finished"
